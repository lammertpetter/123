{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LAMMERT\\\\Desktop\\\\budget-manager-app\\\\src\\\\components\\\\PersonalFinance.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { AuthContext } from '../context/AuthContext';\nimport { fetchUserData, updateUserData } from '../services/userService';\nimport './PersonalFinance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst incomeCategories = [\"Salary\", \"Hourly\", \"Self-Employment\", \"Commission\", \"Bonuses\", \"Investment\", \"Rental\", \"Royalties\", \"Affiliate\", \"Advertising\", \"Unemployment\", \"Disability\", \"Social Security\", \"Child Support\", \"Scholarships\", \"Side Hustles\", \"Lottery\", \"Inheritances\", \"Tax Refunds\"];\nconst expenseCategories = [\"Housing\", \"Utilities\", \"Groceries\", \"Transport\", \"Healthcare\", \"Debt\", \"Insurance\", \"Discretionary\", \"Savings\"];\nconst PersonalFinance = () => {\n  _s();\n  const {\n    user,\n    token\n  } = useContext(AuthContext);\n  const [income, setIncome] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [selectedIncomeCategory, setSelectedIncomeCategory] = useState('');\n  const [incomeAmount, setIncomeAmount] = useState('');\n  const [selectedExpenseCategory, setSelectedExpenseCategory] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  useEffect(() => {\n    if (token) {\n      fetchUserData(token).then(data => {\n        setIncome(data.income || []);\n        setExpenses(data.expenses || []);\n      });\n    }\n  }, [token]);\n  const addIncome = () => {\n    if (selectedIncomeCategory && incomeAmount) {\n      const newIncome = [...income, {\n        category: selectedIncomeCategory,\n        amount: parseFloat(incomeAmount)\n      }];\n      setIncome(newIncome);\n      setSelectedIncomeCategory('');\n      setIncomeAmount('');\n      updateUserData({\n        income: newIncome,\n        expenses\n      }, token);\n    }\n  };\n  const addExpense = () => {\n    if (selectedExpenseCategory && expenseAmount) {\n      const newExpenses = [...expenses, {\n        category: selectedExpenseCategory,\n        amount: parseFloat(expenseAmount)\n      }];\n      setExpenses(newExpenses);\n      setSelectedExpenseCategory('');\n      setExpenseAmount('');\n      updateUserData({\n        income,\n        expenses: newExpenses\n      }, token);\n    }\n  };\n  const editIncome = index => {\n    const newAmount = prompt(\"Enter new amount:\", income[index].amount);\n    if (newAmount) {\n      const updatedIncome = [...income];\n      updatedIncome[index].amount = parseFloat(newAmount);\n      setIncome(updatedIncome);\n      updateUserData({\n        income: updatedIncome,\n        expenses\n      }, token);\n    }\n  };\n  const removeIncome = index => {\n    const updatedIncome = income.filter((_, i) => i !== index);\n    setIncome(updatedIncome);\n    updateUserData({\n      income: updatedIncome,\n      expenses\n    }, token);\n  };\n  const editExpense = index => {\n    const newAmount = prompt(\"Enter new amount:\", expenses[index].amount);\n    if (newAmount) {\n      const updatedExpenses = [...expenses];\n      updatedExpenses[index].amount = parseFloat(newAmount);\n      setExpenses(updatedExpenses);\n      updateUserData({\n        income,\n        expenses: updatedExpenses\n      }, token);\n    }\n  };\n  const removeExpense = index => {\n    const updatedExpenses = expenses.filter((_, i) => i !== index);\n    setExpenses(updatedExpenses);\n    updateUserData({\n      income,\n      expenses: updatedExpenses\n    }, token);\n  };\n  const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\n  const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n  const balance = totalIncome - totalExpenses;\n  const incomeData = income.reduce((acc, curr) => {\n    acc[curr.category] = (acc[curr.category] || 0) + curr.amount;\n    return acc;\n  }, {});\n  const expenseData = expenses.reduce((acc, curr) => {\n    acc[curr.category] = (acc[curr.category] || 0) + curr.amount;\n    return acc;\n  }, {});\n  const incomeDetails = Object.entries(incomeData).map(([category, amount]) => `${category}: £${amount}`);\n  const expenseDetails = Object.entries(expenseData).map(([category, amount]) => `${category}: £${amount}`);\n  const labels = Array.from(new Set([...Object.keys(incomeData), ...Object.keys(expenseData)]));\n  const data = {\n    labels: labels,\n    datasets: [{\n      label: 'Income (£)',\n      data: labels.map(label => incomeData[label] || 0),\n      backgroundColor: '#4CAF50',\n      barThickness: 30\n    }, {\n      label: 'Expenses (£)',\n      data: labels.map(label => expenseData[label] || 0),\n      backgroundColor: '#FF6384',\n      barThickness: 30\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Financial Overview'\n      }\n    },\n    scales: {\n      x: {\n        stacked: false\n      },\n      y: {\n        stacked: false,\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"personal-finance\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"finance-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedIncomeCategory,\n              onChange: e => setSelectedIncomeCategory(e.target.value),\n              className: \"finance-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Income Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this), incomeCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: incomeAmount,\n              onChange: e => setIncomeAmount(e.target.value),\n              placeholder: \"Income Amount (\\xA3)\",\n              className: \"finance-input small-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addIncome,\n            className: \"finance-button\",\n            children: \"Add Income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: income.map((inc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [inc.category, \": \\xA3\", inc.amount, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editIncome(index),\n                className: \"edit-button\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeIncome(index),\n                className: \"remove-button\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedExpenseCategory,\n              onChange: e => setSelectedExpenseCategory(e.target.value),\n              className: \"finance-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Expense Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), expenseCategories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: expenseAmount,\n              onChange: e => setExpenseAmount(e.target.value),\n              placeholder: \"Expense Amount (\\xA3)\",\n              className: \"finance-input small-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addExpense,\n            className: \"finance-button\",\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: expenses.map((expense, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [expense.category, \": \\xA3\", expense.amount, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => editExpense(index),\n                className: \"edit-button\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeExpense(index),\n                className: \"remove-button\",\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"finance-overview\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"totals\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Income:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\xA3\", totalIncome]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Total Expenses:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\xA3\", totalExpenses]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Balance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\xA3\", balance]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Financial Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: data,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Income Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: incomeDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: detail\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Expense Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: expenseDetails.map((detail, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: detail\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(PersonalFinance, \"VV3V53StQD3YpagaHMJk8l11hIk=\");\n_c = PersonalFinance;\nexport default PersonalFinance;\nvar _c;\n$RefreshReg$(_c, \"PersonalFinance\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","AuthContext","fetchUserData","updateUserData","jsxDEV","_jsxDEV","register","incomeCategories","expenseCategories","PersonalFinance","_s","user","token","income","setIncome","expenses","setExpenses","selectedIncomeCategory","setSelectedIncomeCategory","incomeAmount","setIncomeAmount","selectedExpenseCategory","setSelectedExpenseCategory","expenseAmount","setExpenseAmount","then","data","addIncome","newIncome","category","amount","parseFloat","addExpense","newExpenses","editIncome","index","newAmount","prompt","updatedIncome","removeIncome","filter","_","i","editExpense","updatedExpenses","removeExpense","totalIncome","reduce","acc","curr","totalExpenses","balance","incomeData","expenseData","incomeDetails","Object","entries","map","expenseDetails","labels","Array","from","Set","keys","datasets","label","backgroundColor","barThickness","options","responsive","plugins","legend","position","title","display","text","scales","x","stacked","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","inc","expense","detail","_c","$RefreshReg$"],"sources":["C:/Users/LAMMERT/Desktop/budget-manager-app/src/components/PersonalFinance.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { AuthContext } from '../context/AuthContext';\nimport { fetchUserData, updateUserData } from '../services/userService';\nimport './PersonalFinance.css';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst incomeCategories = [\n    \"Salary\",\n    \"Hourly\",\n    \"Self-Employment\",\n    \"Commission\",\n    \"Bonuses\",\n    \"Investment\",\n    \"Rental\",\n    \"Royalties\",\n    \"Affiliate\",\n    \"Advertising\",\n    \"Unemployment\",\n    \"Disability\",\n    \"Social Security\",\n    \"Child Support\",\n    \"Scholarships\",\n    \"Side Hustles\",\n    \"Lottery\",\n    \"Inheritances\",\n    \"Tax Refunds\"\n];\n\nconst expenseCategories = [\n    \"Housing\",\n    \"Utilities\",\n    \"Groceries\",\n    \"Transport\",\n    \"Healthcare\",\n    \"Debt\",\n    \"Insurance\",\n    \"Discretionary\",\n    \"Savings\"\n];\n\nconst PersonalFinance = () => {\n    const { user, token } = useContext(AuthContext);\n    const [income, setIncome] = useState([]);\n    const [expenses, setExpenses] = useState([]);\n    const [selectedIncomeCategory, setSelectedIncomeCategory] = useState('');\n    const [incomeAmount, setIncomeAmount] = useState('');\n    const [selectedExpenseCategory, setSelectedExpenseCategory] = useState('');\n    const [expenseAmount, setExpenseAmount] = useState('');\n\n    useEffect(() => {\n        if (token) {\n            fetchUserData(token).then(data => {\n                setIncome(data.income || []);\n                setExpenses(data.expenses || []);\n            });\n        }\n    }, [token]);\n\n    const addIncome = () => {\n        if (selectedIncomeCategory && incomeAmount) {\n            const newIncome = [...income, { category: selectedIncomeCategory, amount: parseFloat(incomeAmount) }];\n            setIncome(newIncome);\n            setSelectedIncomeCategory('');\n            setIncomeAmount('');\n            updateUserData({ income: newIncome, expenses }, token);\n        }\n    };\n\n    const addExpense = () => {\n        if (selectedExpenseCategory && expenseAmount) {\n            const newExpenses = [...expenses, { category: selectedExpenseCategory, amount: parseFloat(expenseAmount) }];\n            setExpenses(newExpenses);\n            setSelectedExpenseCategory('');\n            setExpenseAmount('');\n            updateUserData({ income, expenses: newExpenses }, token);\n        }\n    };\n\n    const editIncome = (index) => {\n        const newAmount = prompt(\"Enter new amount:\", income[index].amount);\n        if (newAmount) {\n            const updatedIncome = [...income];\n            updatedIncome[index].amount = parseFloat(newAmount);\n            setIncome(updatedIncome);\n            updateUserData({ income: updatedIncome, expenses }, token);\n        }\n    };\n\n    const removeIncome = (index) => {\n        const updatedIncome = income.filter((_, i) => i !== index);\n        setIncome(updatedIncome);\n        updateUserData({ income: updatedIncome, expenses }, token);\n    };\n\n    const editExpense = (index) => {\n        const newAmount = prompt(\"Enter new amount:\", expenses[index].amount);\n        if (newAmount) {\n            const updatedExpenses = [...expenses];\n            updatedExpenses[index].amount = parseFloat(newAmount);\n            setExpenses(updatedExpenses);\n            updateUserData({ income, expenses: updatedExpenses }, token);\n        }\n    };\n\n    const removeExpense = (index) => {\n        const updatedExpenses = expenses.filter((_, i) => i !== index);\n        setExpenses(updatedExpenses);\n        updateUserData({ income, expenses: updatedExpenses }, token);\n    };\n\n    const totalIncome = income.reduce((acc, curr) => acc + curr.amount, 0);\n    const totalExpenses = expenses.reduce((acc, curr) => acc + curr.amount, 0);\n    const balance = totalIncome - totalExpenses;\n\n    const incomeData = income.reduce((acc, curr) => {\n        acc[curr.category] = (acc[curr.category] || 0) + curr.amount;\n        return acc;\n    }, {});\n\n    const expenseData = expenses.reduce((acc, curr) => {\n        acc[curr.category] = (acc[curr.category] || 0) + curr.amount;\n        return acc;\n    }, {});\n\n    const incomeDetails = Object.entries(incomeData).map(([category, amount]) => `${category}: £${amount}`);\n    const expenseDetails = Object.entries(expenseData).map(([category, amount]) => `${category}: £${amount}`);\n\n    const labels = Array.from(new Set([...Object.keys(incomeData), ...Object.keys(expenseData)]));\n\n    const data = {\n        labels: labels,\n        datasets: [\n            {\n                label: 'Income (£)',\n                data: labels.map(label => incomeData[label] || 0),\n                backgroundColor: '#4CAF50',\n                barThickness: 30,\n            },\n            {\n                label: 'Expenses (£)',\n                data: labels.map(label => expenseData[label] || 0),\n                backgroundColor: '#FF6384',\n                barThickness: 30,\n            },\n        ],\n    };\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            title: {\n                display: true,\n                text: 'Financial Overview',\n            },\n        },\n        scales: {\n            x: {\n                stacked: false,\n            },\n            y: {\n                stacked: false,\n                beginAtZero: true,\n            },\n        },\n    };\n\n    return (\n        <div className=\"personal-finance\">\n            <div className=\"finance-container\">\n                <div className=\"finance-form\">\n                    <div>\n                        <h3>Income</h3>\n                        <div className=\"input-group\">\n                            <select \n                                value={selectedIncomeCategory} \n                                onChange={(e) => setSelectedIncomeCategory(e.target.value)}\n                                className=\"finance-select\"\n                            >\n                                <option value=\"\">Select Income Category</option>\n                                {incomeCategories.map((category, index) => (\n                                    <option key={index} value={category}>{category}</option>\n                                ))}\n                            </select>\n                            <input \n                                type=\"number\" \n                                value={incomeAmount} \n                                onChange={(e) => setIncomeAmount(e.target.value)} \n                                placeholder=\"Income Amount (£)\" \n                                className=\"finance-input small-input\"\n                            />\n                        </div>\n                        <button onClick={addIncome} className=\"finance-button\">Add Income</button>\n                        <ul>\n                            {income.map((inc, index) => (\n                                <li key={index}>\n                                    {inc.category}: £{inc.amount}\n                                    <button onClick={() => editIncome(index)} className=\"edit-button\">Edit</button>\n                                    <button onClick={() => removeIncome(index)} className=\"remove-button\">Remove</button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                    <div>\n                        <h3>Expenses</h3>\n                        <div className=\"input-group\">\n                            <select \n                                value={selectedExpenseCategory} \n                                onChange={(e) => setSelectedExpenseCategory(e.target.value)}\n                                className=\"finance-select\"\n                            >\n                                <option value=\"\">Select Expense Category</option>\n                                {expenseCategories.map((category, index) => (\n                                    <option key={index} value={category}>{category}</option>\n                                ))}\n                            </select>\n                            <input \n                                type=\"number\" \n                                value={expenseAmount} \n                                onChange={(e) => setExpenseAmount(e.target.value)} \n                                placeholder=\"Expense Amount (£)\" \n                                className=\"finance-input small-input\"\n                            />\n                        </div>\n                        <button onClick={addExpense} className=\"finance-button\">Add Expense</button>\n                        <ul>\n                            {expenses.map((expense, index) => (\n                                <li key={index}>\n                                    {expense.category}: £{expense.amount}\n                                    <button onClick={() => editExpense(index)} className=\"edit-button\">Edit</button>\n                                    <button onClick={() => removeExpense(index)} className=\"remove-button\">Remove</button>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"finance-overview\">\n                    <div className=\"totals\">\n                        <div className=\"total-item\">\n                            <h3>Total Income:</h3>\n                            <p>£{totalIncome}</p>\n                        </div>\n                        <div className=\"total-item\">\n                            <h3>Total Expenses:</h3>\n                            <p>£{totalExpenses}</p>\n                        </div>\n                        <div className=\"total-item\">\n                            <h3>Balance:</h3>\n                            <p>£{balance}</p>\n                        </div>\n                    </div>\n                    <h3>Financial Overview</h3>\n                    <Bar data={data} options={options} />\n                    <div className=\"details\">\n                        <h4>Income Details:</h4>\n                        <ul>\n                            {incomeDetails.map((detail, index) => (\n                                <li key={index}>{detail}</li>\n                            ))}\n                        </ul>\n                        <h4>Expense Details:</h4>\n                        <ul>\n                            {expenseDetails.map((detail, index) => (\n                                <li key={index}>{detail}</li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PersonalFinance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}